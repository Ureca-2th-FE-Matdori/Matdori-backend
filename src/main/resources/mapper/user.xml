<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.uplus.matdori.category.model.dao.UserDAO">

    <!-- resultMap 설정을 통해 c_1~c_15 컬럼을 categoryVisits 리스트로 변환 가능 -->
    <resultMap id="userResultMap" type="com.uplus.matdori.category.model.dto.UserDTO">
        <id property="user_id" column="user_id"/>
        <result property="password" column="password"/>
        <result property="point" column="point"/>

        <!-- c_1 ~ c_15 컬럼을 각각 매핑 후, TypeHandler를 통해 리스트로 변환 -->
        <result property="categoryVisits" column="c_1" typeHandler="com.uplus.matdori.category.model.typehandler.CategoryVisitsTypeHandler"/>

    </resultMap>

    <!-- 특정 회원 정보 조회 -->
    <select id="getUserById" parameterType="string" resultMap="userResultMap">
        SELECT user_id, password, point, c_1, c_2, c_3, c_4, c_5, c_6, c_7, c_8, c_9, c_10, c_11, c_12, c_13, c_14, c_15
        FROM 회원정보
        WHERE user_id = #{user_id}
    </select>

    <!-- 회원 등록 -->
    <insert id="insertUser" parameterType="com.uplus.matdori.category.model.dto.UserDTO">
        INSERT INTO 회원정보 (
        user_id,password
        ) VALUES (
        #{user_id}, #{password}

        )
    </insert>

    <!-- 회원정보 업데이트 (포인트 및 방문 횟수) -->
    <update id="updateUser" parameterType="com.uplus.matdori.category.model.dto.UserDTO">
        UPDATE 회원정보
        SET point = #{point}, password = #{password},
        <trim prefixOverrides=",">
            <foreach collection="categoryVisits" item="visit" index="index">
                c_${index + 1} = #{visit},
            </foreach>
        </trim>
        WHERE user_id = #{user_id}
    </update>

    <!-- 특정 회원의 point를 +5 증가 -->
    <update id="increaseUserPoint" parameterType="String">
        UPDATE 회원정보
        SET point = point + 5
        WHERE user_id = #{user_id}
    </update>

    <!-- 특정 카테고리 방문 횟수 증가 / SQL 인젝션 위험을 방지하기 위해 아래와 같이 안전하게 구성해야 함 -->
    <update id="incrementCategoryVisitCount">
        UPDATE 회원정보
        <set>
            <choose>
                <when test="categoryId == 1">c_1 = c_1 + 1</when>
                <when test="categoryId == 2">c_2 = c_2 + 1</when>
                <when test="categoryId == 3">c_3 = c_3 + 1</when>
                <when test="categoryId == 4">c_4 = c_4 + 1</when>
                <when test="categoryId == 5">c_5 = c_5 + 1</when>
                <when test="categoryId == 6">c_6 = c_6 + 1</when>
                <when test="categoryId == 7">c_7 = c_7 + 1</when>
                <when test="categoryId == 8">c_8 = c_8 + 1</when>
                <when test="categoryId == 9">c_9 = c_9 + 1</when>
                <when test="categoryId == 10">c_10 = c_10 + 1</when>
                <when test="categoryId == 11">c_11 = c_11 + 1</when>
                <when test="categoryId == 12">c_12 = c_12 + 1</when>
                <when test="categoryId == 13">c_13 = c_13 + 1</when>
                <when test="categoryId == 14">c_14 = c_14 + 1</when>
                <when test="categoryId == 15">c_15 = c_15 + 1</when>
            </choose>
        </set>
        WHERE user_id = #{user_id}
    </update>

    <!-- 특정 카테고리 방문 횟수 조회 (동적 SQL) -->
    <select id="getCategoryVisitCount" parameterType="map" resultType="int">
        SELECT c_${categoryId} FROM 회원정보 WHERE user_id = #{user_id}
    </select>
    
    <!-- 전체 회원 중 많은 point를 갖고 있는 상위 10명의 데이터 조회 -->
    <select id="getTopRankingUsers" resultType="com.uplus.matdori.category.model.dto.UserDTO">
    	SELECT user_id, point FROM 회원정보 ORDER BY point DESC LIMIT 10
    </select>
    
    <!-- 특정 회원의 point 랭킹 조회 -->
    <select id="getMyRanking" parameterType="java.lang.String" resultType="com.uplus.matdori.category.model.dto.MyRankingDTO">
    	SELECT user_id, ranking FROM (SELECT user_id, point, RANK() OVER (ORDER BY point DESC) AS ranking FROM 회원정보) AS sortRank WHERE user_id = #{user_id};
    </select>

</mapper>
